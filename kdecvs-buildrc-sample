# kdecvs-buildrc
# You may use comments.  Any text on a line after a # will
# be ignored.  Blank lines are OK as well.
# Modules are downloaded, built, and installed in the order you 
# specify them in this file.

global # Set global options
       
# We use GNU ld here, whatever that means.  You can find out what
# configure flags to put here by running $(cvs-root)/$(module)/configure --help
# after the build system has been created.
configure-flags --with-gnu-ld --enable-debug=full

# Unsermake doesn't work with every module, but it tends to speed up
# compilation on modules it does work with.  Enabling this flag will
# automatically install the appropriate software with no other options
# necessary.
use-unsermake 1

# If you want to install something from a particular release, you can use
# this tag.  Note that using kdecvs-build to install KDE 3.2.x is probably
# a waste.  Konstruct would be better for that kind of thing.
# release-tag KDE_3_2_0_RELEASE

# Relatively good optimizations, for an Athlon XP.
# This flag (athlon-xp) will break on gcc 3.2.1, IIRC!
# If your GCC has ProPolice installed, you can use the -fstack-protector
# flag to help mitigate stack overflows.
cxxflags -g -march=athlon-xp -pipe -fstack-protector

# Where to stick the generated files.
build-dir build

# Where to put the logs
log-dir log

# Use home Qt (the qt-copy we're installing).
qtdir ~/kdecvs/qt-copy

# Use home KDE
kdedir ~/kde

# Path for devel tools, Qt, and KDE.  Probably excessive.  Note that
# $KDEDIR/bin and $QTDIR/bin are automatically added.
binpath /usr/bin:/bin:/usr/X11R6/bin

# LD_LIBRARY_PATH will automatically be set as appropriate, but if you need
# to add directories, you can use the following directive.
# libpath ~/my-libs

# Download sources into this directory
cvs-root ~/kdecvs

# From this CVS server
cvs-server :pserver:anonymous@anoncvs.kde.org:/home/kde

# Use this file for locking
lockfile ~/.kdecvs-build-lock

# Output make results to nohup.out (it will be in the $(cvs-root)/logs
# directory.
make-output-file nohup.out

# End of global options
end global

module kdenonbeta
# unsermake would automatically be added as needed anyways.  You can also
# specify subdirectories to pull, like the following line.
# checkout-only applets/ksearchapplet

checkout-only unsermake
end module

module qt-copy
# We tend to want a stable Qt.  Note that if you are using qt-copy, you must
# build it (you don't need to install it) before building the rest of KDE.
manual-build

# This line is begging for a backslash-continuation operator, I know.
# configure-flags overrides global configure-flags for qt-copy only.
# These flags are recommended according to README.qt-copy in CVS.
configure-flags -system-zlib -qt-gif -system-libpng -system-libjpeg -plugin-imgfmt-mng -thread -no-exceptions -debug -fast -dlopen-opengl
end module

module arts
configure-flags --with-alsa
end module

module kdeaddons
end module

module kdegames
end module

module kdelibs
configure-flags --enable-sendfile --enable-mitshm --enable-fast-malloc=yes --enable-dnotify --with-alsa
end module

module kdebase
configure-flags --with-pam --with-shadow
end module

module kdeartwork
# I only wanted Plastik.  The Makefile seems to depend on everything in
# styles/ being there, not just styles/plastik/
checkout-only styles
end module

module kdeadmin
configure-flags --with-pam=yes --with-shadow
end module

module kdenetwork
end module

module kdesdk
end module

module kdepim
configure-flags --disable-exchange
end module

module kdesupport
checkout-only taglib
end module

module kdemultimedia
# kdemultimedia seems to have bad mojo with use-unsermake for some reason.
# I think it's because of the aRts testing.
use-unsermake 0
end module

# End of file
